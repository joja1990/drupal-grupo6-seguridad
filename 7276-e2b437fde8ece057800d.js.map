{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/sections/BuscadorPrincipal.jsx"],"names":["useStyles","makeStyles","palette","theme","intro","padding","overflow","breakpoints","down","paperSearch","backgroundColor","paddingLeft","display","alignItems","textAlign","width","height","margin","borderRadius","inputShearch","marginLeft","spacing","flex","border","whiteSpace","outline","resultadobusqueda","position","paperDescription","estilosimagen","maxWidth","marginBottom","marginTop","index","store","segmento","estilos","dispatch","useDispatch","useState","searchQuery","setSearchQuery","results","useFlexSearch","hasNoResults","length","color","aria-label","style","component","className","classNames","value","onChange","e","target","placeholder","onKeyDown","keyCode","preventDefault","guardarProductosBusquedaAction","navigate","clsx","aria-haspopup","onClick","paddingTop","map","item","button","Link","to","ItemCodeAux","textDecoration","container","justify","src","Imagen","primary","fontSize","Descripcion","estilotexto","busqueda","variant","md","xs","key","toString","paintDrip","hex","SegmentoAux","entryOffset","duration","alt","fontFamily","fontWeight","NombreSegmento"],"mappings":"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","file":"7276-e2b437fde8ece057800d.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useFlexSearch } from \"react-use-flexsearch\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { Link } from \"gatsby\";\r\nimport InputBase from \"@material-ui/core/InputBase\"\r\nimport classNames from \"classnames\"\r\nimport { navigate } from \"gatsby\"\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\r\nimport SentimentVeryDissatisfied from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { guardarProductosBusquedaAction } from \"../../state/reducers/productoReducers\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport clsx from \"clsx\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  intro: {\r\n    padding: \"100px 0 0 !important\",\r\n    overflow: \"visible !important\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"100px 0 0 !important\",\r\n    },\r\n  },\r\n  paperSearch: {\r\n    backgroundColor: \"white\",\r\n    paddingLeft: 5,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    width: \"120%\",\r\n    height: 35,\r\n    margin: 0,\r\n    borderRadius: \"5px\",\r\n  },\r\n  inputShearch: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    border: \"1px\",\r\n    whiteSpace: \"normal\",\r\n    \"&:focus\": {\r\n      outline: 0,\r\n    },\r\n  },\r\n  resultadobusqueda: {\r\n    position: \"fixed\",\r\n    width: \"25%\",\r\n    paddingLeft: \"25%\"\r\n  },\r\n  paperDescription: {\r\n    height: 500,\r\n    overflow: \"auto\",\r\n  },\r\n  estilosimagen: {\r\n    maxWidth: \"10%\",\r\n    marginLeft: 5,\r\n    marginBottom: 0,\r\n    marginTop: 0,\r\n    padding: \"0px\",\r\n    borderRadius: \"100%\"\r\n  },\r\n}))\r\n\r\nconst BuscadorGeneral = ({ index, store, segmento }) => {\r\n  const estilos = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [searchQuery, setSearchQuery] = useState(\"\")\r\n  const results = useFlexSearch(searchQuery, index, store)\r\n  const hasNoResults = searchQuery.length > 0 && results.length === 0\r\n\r\n  const MostrarBusquedaCatalogo = e => {\r\n    if (e.keyCode === 13 || e.keyCode === 9) {\r\n      e.preventDefault()\r\n      dispatch(guardarProductosBusquedaAction(results))\r\n      navigate(`/buscador/`)\r\n    }\r\n  }\r\n  const BusquedaCatalogoClick = e => {\r\n    e.preventDefault()\r\n    navigate(`/buscador/`)\r\n    dispatch(guardarProductosBusquedaAction(results))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ButtonGroup\r\n        color=\"primary\"\r\n        aria-label=\"split button\"\r\n        style={{ width: \"120%\" }}\r\n      >\r\n        <Paper component=\"form\" className={classNames(estilos.paperSearch)}>\r\n          <InputBase\r\n            className={classNames(estilos.inputShearch)}\r\n            value={searchQuery}\r\n            onChange={e => setSearchQuery(e.target.value)}\r\n            placeholder=\"Busqueda de Productos\"\r\n            onKeyDown={MostrarBusquedaCatalogo}\r\n          />\r\n        </Paper>\r\n        <Button\r\n          className={clsx(\"bg-blue  text-13 text-white \")}\r\n          aria-label=\"select merge strategy\"\r\n          aria-haspopup=\"menu\"\r\n          onClick={BusquedaCatalogoClick}\r\n        >\r\n          <SearchIcon style={{ color: \"white\" }} />\r\n        </Button>\r\n      </ButtonGroup>\r\n      {results.length > 0 && (\r\n        <div className={classNames(estilos.resultadobusqueda)}>\r\n          <div style={{ position: \"absolute\", paddingTop: \"2%\" }}>\r\n            <Paper className={classNames(estilos.paperDescription)}>\r\n              <List>\r\n                {results.map((item) => {\r\n                  return (\r\n                    <ListItem button>\r\n                      <Link\r\n                        to={`/producto/${item.ItemCodeAux}/`}\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        <Grid\r\n                          container\r\n                          alignItems=\"center\"\r\n                          justify=\"center\"\r\n                        >\r\n\r\n                          <img\r\n                            className={classNames(estilos.estilosimagen)}\r\n                            src={\r\n                              \"https://disdelsa.com/imagenes/productos/\" +\r\n                              item.Imagen\r\n                            }\r\n                          />\r\n                          <ListItemText\r\n                            primary={\r\n                              <Box style={{ fontSize: 10, textDecoration: \"none\", color: \"black\" }}>\r\n                                {item.Descripcion}\r\n                              </Box>\r\n                            }\r\n                            className={classNames(estilos.estilotexto)}\r\n                          />\r\n                        </Grid>\r\n                        <Divider />\r\n                      </Link>\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Paper>\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n      {hasNoResults && (\r\n        <div className={classNames(estilos.resultadobusqueda)}>\r\n          <div style={{ position: \"absolute\", paddingTop: \"2%\" }}>\r\n            <Paper\r\n              className={classNames(\r\n                estilos.paperDescription\r\n              )}\r\n            >\r\n              <div container>\r\n                <div>\r\n                  <div className={classNames(estilos.busqueda)}>\r\n                    <SentimentVeryDissatisfied\r\n                      fontSize=\"large\"\r\n                      style={{ fontSize: 40 }}\r\n                    />\r\n                    <Typography variant=\"h6\" style={{ margin: \"10px\" }}>\r\n                      Lo sentimos!\r\n                    </Typography>\r\n                  </div>\r\n                  <Typography style={{ margin: \"5px\" }}>\r\n                    no se encontraron coincidencias de busqueda.\r\n                  </Typography>\r\n                  <br />\r\n\r\n                  <strong>\r\n                    Quizás puedan interesarte las siguientes secciones\r\n                  </strong>\r\n                  <Grid container>\r\n                    <Grid item md={12} xs={12}>\r\n                      <Grid container>\r\n                        {segmento.map(\r\n                          (item, index) => (\r\n                            <Grid\r\n                              item\r\n                              md={4}\r\n                              xs={3}\r\n                              key={index.toString()}\r\n                              style={{ margin: \"0px\" }}\r\n                            >\r\n                              <AniLink\r\n                                paintDrip\r\n                                hex=\"#93292E\"\r\n                                to={`/${item.SegmentoAux}/`}\r\n                                entryOffset={80}\r\n                                duration={0.3}\r\n                              >\r\n                                <img\r\n                                  src={`https://disdelsa.com/imagenes/${item.Imagen}`}\r\n                                  alt={item.Imagen}\r\n                                  style={{ padding: 15, width: 125 }}\r\n                                />\r\n                              </AniLink>\r\n                              <Typography\r\n                                style={{\r\n                                  fontFamily: \"Lobster\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                <Box fontWeight=\"fontWeightBold\">\r\n                                  {item.NombreSegmento}\r\n                                </Box>\r\n                              </Typography>\r\n                            </Grid>\r\n                          )\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BuscadorGeneral\r\n"],"sourceRoot":""}