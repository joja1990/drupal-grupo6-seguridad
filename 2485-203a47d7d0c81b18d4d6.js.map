{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/sections/Mensaje.jsx","webpack://gatsby-starter-default/./src/components/sections/SolicitarUnaCita.jsx","webpack://gatsby-starter-default/./src/components/sections/SolicitarUnaCitaPrincipal.jsx"],"names":["useStyles","makeStyles","theme","finishMessage","textAlign","maxWidth","marginTop","marginBlockEnd","background","borderRadius","margin","display","color","height","width","button","textDecoration","spacing","marginLeft","Mesaje","classes","dispatch","useDispatch","className","Typography","variant","gutterBottom","CheckCircle","Button","onClick","LevantarBackdrow","colores","root","flexWrap","backgroundColor","marginRight","backdrop","zIndex","drawer","loading","useSelector","state","form","useState","callback","value","load","expired","stateGeneral","setState","console","log","Nombres","Apellidos","NombreEmpresa","Correo","Telefono","Tipo","IdDivision","Form","setForm","boolTelefono","setTelefono","onChangeFormulario","e","target","name","ValidatorForm","numeroValido","RegExp","test","correoValido","id","Grid","item","md","xs","onSubmit","preventDefault","EnviarDataSolicitud","style","paddingLeft","paddingRight","container","label","Box","onChange","validators","errorMessages","fullWidth","size","InputProps","paddingTop","paddingBottom","autoFocus","direction","justify","alignItems","sitekey","asyncScriptOnLoad","Backdrop","open","CircularProgress","type","disabled","enviado","Mensaje"],"mappings":"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","file":"2485-203a47d7d0c81b18d4d6.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport {LevantarBackdrow}  from \"../../state/reducers/FormReducers\"\r\nimport { Button } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  finishMessage: {\r\n    textAlign: \"center\",\r\n    maxWidth: 600,\r\n    marginTop: 10,\r\n    marginBlockEnd :20,\r\n    background: \"white\",\r\n    borderRadius: 15,\r\n    margin: \"0 auto\",\r\n    \"& h4\": {\r\n      \"& span\": {\r\n        textAlign: \"center\",\r\n        display: \"block\",\r\n        \"& svg\": {\r\n          color: \"#148A5C\",\r\n          height: \"auto\",\r\n          width: 148,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  button: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Mensaje = ({Mesaje}) => {\r\n  const classes = useStyles();\r\n  const dispatch=useDispatch();\r\n  const CerrarMensaje = () => {\r\n    dispatch(LevantarBackdrow(false));\r\n  };\r\n  return (\r\n    <div className={classes.finishMessage}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        <span>\r\n          <CheckCircle />\r\n        </span>\r\n        Gracias por enviar tu solicitud\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        &nbsp;\r\n        <strong>{Mesaje}</strong>\r\n        &nbsp;\r\n        <Button color=\"secondary\" onClick={()=>CerrarMensaje()}>X</Button>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mensaje;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport {\r\n  EnviarDataSolicitud,\r\n  LevantarBackdrow,\r\n} from \"../../state/reducers/FormReducers\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nconst colores = {\r\n  color_button: \"rgb(19, 180, 163 )\",\r\n  color_text_button: \"white\",\r\n  hover_color_button: \"rgb(16, 176, 159 )\",\r\n  hover_color_text_button: \"white\",\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    // margin: theme.spacing(1),\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 15,\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: colores.color_button,\r\n    color: colores.color_text_button,\r\n    \"&:hover\": { backgroundColor: colores.hover_color_button, color: \"white\" },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst SolicitarUnaCita = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  ///Ver el estado loading\r\n  const loading = useSelector((state) => state.form);\r\n  const TEST_SITE_KEY = \"6LeE4j0aAAAAADZarp0wCP44pZFg0Tl2WtD_weOW\";\r\n  ////recaptcha\r\n  const [stateGeneral, setState] = useState({\r\n    callback: \"not fired\",\r\n    value: \"[empty]\",\r\n    load: false,\r\n    expired: \"false\",\r\n  });\r\n  console.log(stateGeneral)\r\n\r\n  const handleChange = (value) => {\r\n    setState({ value });\r\n\r\n    if (value === null) setState({ expired: \"true\" });\r\n  };\r\n\r\n  const asyncScriptOnLoad = () => {\r\n    setState({ callback: \"called!\" });\r\n  };\r\n\r\n  const DELAY = 1500;\r\n\r\n  const [Form, setForm] = useState({\r\n    Nombres: \"\",\r\n    Apellidos: \"\",\r\n    NombreEmpresa: \"\",\r\n    Correo: \"\",\r\n    Telefono: \"\",\r\n    Tipo: \"SolicitudKCP\",\r\n    IdDivision:9,\r\n  });\r\n\r\n  const { Nombres, Apellidos, NombreEmpresa, Correo, Telefono, Tipo,IdDivision } = Form;\r\n\r\n  const [boolTelefono, setTelefono] = useState(false);\r\n\r\n  const onChangeFormulario = (e) => {\r\n    setForm({\r\n      ...Form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const boolCaracteres = () => {\r\n    ValidatorForm.addValidationRule(\"boolC\", (value) => {\r\n      const numeroValido = RegExp(\r\n        /^[\\(]?[\\+]?(\\d{2}|\\d{3})[\\)]?[\\s]?((\\d{6}|\\d{8})|(\\d{3}[\\*\\.\\-\\s]){3}|(\\d{2}[\\*\\.\\-\\s]){4}|(\\d{4}[\\*\\.\\-\\s]){2})|\\d{8}|\\d{10}|\\d{12}$/\r\n      );\r\n      setTelefono(numeroValido.test(value));\r\n      if (numeroValido.test(value)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n  boolCaracteres();\r\n  const correoValido = RegExp(\r\n    /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/\r\n  );\r\n\r\n  const enviarFormulario = (e) => {\r\n    e.preventDefault();\r\n    dispatch(LevantarBackdrow(true));\r\n    dispatch(EnviarDataSolicitud(Form));\r\n  };\r\n\r\n  return (\r\n    <section className=\"section\" id=\"portfoli2\">\r\n      <div className=\"container\">\r\n        <h3 className=\"mt-0 font-normal text-35 text-primary text-center\">\r\n          Solicitar una Visita\r\n        </h3>\r\n        <Grid item md={12} xs={12}>\r\n          <ValidatorForm\r\n            onSubmit={enviarFormulario}\r\n            style={{ marginTop: 20, paddingLeft: 30, paddingRight: 30 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  className={classes.margin}\r\n                  label={<Box className=\"text-primary\">Nombre</Box>}\r\n                  name=\"Nombres\"\r\n                  value={Nombres}\r\n                  onChange={onChangeFormulario}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"este campo es obligatorio\"]}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  InputProps={{\r\n                    style: {\r\n                      borderRadius: 300,\r\n                      paddingTop: 5,\r\n                      paddingBottom: 5,\r\n                      paddingLeft: \"0.75rem\",\r\n                      background: \"rgba(255,255,255,0.87)\",\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  className={classes.margin}\r\n                  fullWidth\r\n                  label={<Box className=\"text-primary\">Apellido</Box>}\r\n                  name=\"Apellidos\"\r\n                  value={Apellidos}\r\n                  onChange={onChangeFormulario}\r\n                  autoFocus\r\n                  size=\"small\"\r\n                  InputProps={{\r\n                    style: {\r\n                      borderRadius: 300,\r\n                      paddingTop: 5,\r\n                      paddingBottom: 5,\r\n                      paddingLeft: \"0.75rem\",\r\n                      background: \"rgba(255,255,255,0.87)\",\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  className={classes.margin}\r\n                  fullWidth\r\n                  label={<Box className=\"text-primary\">Nombre del Negocio</Box>}\r\n                  name=\"NombreEmpresa\"\r\n                  value={NombreEmpresa}\r\n                  onChange={onChangeFormulario}\r\n                  autoFocus\r\n                  size=\"small\"\r\n                  InputProps={{\r\n                    style: {\r\n                      borderRadius: 300,\r\n                      paddingTop: 5,\r\n                      paddingBottom: 5,\r\n                      paddingLeft: \"0.75rem\",\r\n                      background: \"rgba(255,255,255,0.87)\",\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  className={classes.margin}\r\n                  label={<Box className=\"text-primary\">E-mail</Box>}\r\n                  name=\"Correo\"\r\n                  value={Correo}\r\n                  onChange={onChangeFormulario}\r\n                  validators={[\"required\", \"isEmail\"]}\r\n                  errorMessages={[\r\n                    \" este campo es obligatorio \",\r\n                    \"el correo electrónico no es válido \",\r\n                  ]}\r\n                  fullWidth\r\n                  autoFocus\r\n                  size=\"small\"\r\n                  InputProps={{\r\n                    style: {\r\n                      borderRadius: 300,\r\n                      paddingTop: 5,\r\n                      paddingBottom: 5,\r\n                      paddingLeft: \"0.75rem\",\r\n                      background: \"rgba(255,255,255,0.87)\",\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  className={classes.margin}\r\n                  label={<Box className=\"text-primary\">Celular</Box>}\r\n                  value={Telefono}\r\n                  name=\"Telefono\"\r\n                  onChange={onChangeFormulario}\r\n                  validators={[\"boolC\", \"required\"]}\r\n                  errorMessages={[\"Numero no valido\", \"este campo es obligatorio\"]}\r\n                  fullWidth\r\n                  autoFocus\r\n                  size=\"small\"\r\n                  InputProps={{\r\n                    style: {\r\n                      borderRadius: 300,\r\n                      paddingTop: 5,\r\n                      paddingBottom: 5,\r\n                      paddingLeft: \"0.75rem\",\r\n                      background: \"rgba(255,255,255,0.87)\",\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid></Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-end\"\r\n                alignItems=\"center\"\r\n              >\r\n                <ReCAPTCHA\r\n                  style={{ paddingRight: 30 }}\r\n                  theme=\"light\"\r\n                  sitekey={TEST_SITE_KEY}\r\n                  onChange={handleChange}\r\n                  asyncScriptOnLoad={asyncScriptOnLoad}\r\n                />\r\n\r\n                {loading.loading ? (\r\n                  <Backdrop className={classes.backdrop} open={loading.loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    Enviando.....\r\n                  </Backdrop>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className={classes.button}\r\n                    disabled={\r\n                      !Nombres ||\r\n                      !boolTelefono ||\r\n                      !correoValido.test(Correo) ||\r\n                      !Apellidos ||\r\n                      !stateGeneral.value\r\n                    }\r\n                  >\r\n                    Enviar\r\n                  </Button>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </Grid>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SolicitarUnaCita;\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport Mensaje from \"../../components/sections/Mensaje\"\r\nimport SolicitarUnaCita from \"../../components/sections/SolicitarUnaCita\"\r\n\r\n\r\nconst Index = () => {\r\n    const loading = useSelector((state) => state.form);\r\n    return <>\r\n        {loading.enviado ? (\r\n            <Mensaje Mesaje={loading.Mensaje} />\r\n        ) : (\r\n            <SolicitarUnaCita />\r\n        )}\r\n\r\n    </>\r\n\r\n\r\n}\r\n\r\nexport default Index"],"sourceRoot":""}