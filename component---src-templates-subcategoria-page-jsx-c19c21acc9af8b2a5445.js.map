{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Breadcrumbs/MostrarSubcategorias.jsx","webpack://gatsby-starter-default/./src/templates/subcategoria-page.jsx"],"names":["useStyles","makeStyles","palette","bgLightGray","background","RecorrerSegmentos","Card","CardContent","className","style","fontSize","height","Divider","map","Categorias","Cat","SubCategorias","Sub","index","Grid","item","key","Link","to","NombreSubCategoriaAux","clsx","NombreSubCategoria","card","position","borderRadius","border","transition","cardSubcategorias","borderTop","transform","color","intro","padding","overflow","breakpoints","down","data","classes","theme","useTheme","allAllproductosJson","segmentosFilter","subcategoriaLista","Segmento","Categoria","SeoSubcategoria","SeoImagen","productSubCategory","edges","e","node","useState","productFiltrado","setproductFiltrado","filter","filtrar","SegmentoAux","isMobile","useMediaQuery","id","link","description","keywords","title","image","seccion","SeccionCategoriaLink","SeccionSubCategoria","handleProducto","prod","products","container","spacing","md","sm","xs","MostrarSubcategorias","length","ind","ItemCodeAux","cursor","textDecoration","Imagen","width","IdProducto","Descripcion","direction","justify","alignItems","Buttons","ProductData"],"mappings":"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","file":"component---src-templates-subcategoria-page-jsx-c19c21acc9af8b2a5445.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\"\r\nimport { Card, Divider, Grid, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    bgLightGray: {\r\n        background: \"rgba(0,0,0,0.05)\",\r\n    },\r\n}));\r\n\r\nconst Subcategoria = ({ RecorrerSegmentos }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardContent className=\"flex-column justify-between min-h-full\">\r\n                    <div\r\n                        className=\"text-center mb-4 icon\"\r\n                        style={{ fontSize: \"12px\", height: \"5px\" }}\r\n                    >\r\n                        <h4 className=\"mt-0 font-normal mb-4 text-22 text-primary\">Subcategorias\r\n                            <Divider />\r\n                        </h4>\r\n                    </div>\r\n                </CardContent>\r\n                {RecorrerSegmentos.map((Card) => (\r\n                    Card.Categorias.map((Cat) => (\r\n                        Cat.SubCategorias.map((Sub, index) => (\r\n                            <Grid\r\n                                item\r\n                                key={index}\r\n                            >\r\n                                <Link to={`/subcategoria/${Sub.NombreSubCategoriaAux}/`}>\r\n                                    <div\r\n\r\n                                        className={clsx({\r\n                                            \"px-1 py-1 mb-0 text-center border-radius-8 hover-bg-primary cursor-pointer\": true,\r\n                                        })}\r\n                                    >\r\n                                        {Sub.NombreSubCategoria}\r\n                                    </div>\r\n                                </Link>\r\n                            </Grid>\r\n                        ))\r\n                    ))\r\n                ))}\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Subcategoria;\r\n","import React, { useState } from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport { Grid, Card, useMediaQuery } from \"@material-ui/core\"\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\r\nimport ExampleImage from \"../components/DataGatsbyImage\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/SEO/seo\"\r\nimport Buscador from \"../components/sections/BuscadorCS\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport clsx from \"clsx\"\r\nimport Breadcrums from \"../components/Breadcrumbs/Breadcrumbs\"\r\nimport MostrarSubcategorias from \"../components/Breadcrumbs/MostrarSubcategorias\"\r\nimport ButtonsCarr from \"../components/ButtonCarr/Buttons\"\r\n\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  card: {\r\n    position: \"relative\",\r\n    borderRadius: 12,\r\n    border: \"1px solid rgba(0,0,0,0.17)\",\r\n    transition: \"border 250ms ease-in-out\",\r\n    \"&:hover\": {\r\n      border: \"1px solid rgba(var(--primary), 1)\",\r\n    },\r\n  },\r\n  cardSubcategorias: {\r\n    transition: \"all 400ms ease-in-out\",\r\n    borderTop: \"2px solid black\",\r\n    \"& .icon\": {\r\n      fontSize: 64,\r\n    },\r\n\r\n    \"&:hover\": {\r\n      transform: \"translateY(-8px)\",\r\n\r\n      borderTop: \"2px solid rgba(var(--primary), 1)\",\r\n      \"& .icon\": {\r\n        color: \"rgba(var(--primary),1)\",\r\n      },\r\n    },\r\n  },\r\n  intro: {\r\n    padding: \"160px 0 0 !important\",\r\n    overflow: \"visible !important\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"60px 0 0 !important\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst SubCategoria = ({ data }) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  let { allAllproductosJson, segmentosFilter } = data\r\n  let { subcategoriaLista, Segmento, Categoria, SeoSubcategoria, SeoImagen } = allAllproductosJson\r\n  const productSubCategory = allAllproductosJson.edges.map(e => e.node)\r\n  const [productFiltrado, setproductFiltrado] = useState([])\r\n  const SegmentosFilterCategoria = segmentosFilter.edges.map(e => e.node)\r\n\r\n  const RecorrerSegmentos = SegmentosFilterCategoria.filter((filtrar) => {\r\n    return filtrar.SegmentoAux === Segmento[0];\r\n  });\r\n  const handleProducto = (prod) => {\r\n    setproductFiltrado(prod)\r\n  }\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"))\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <section className={clsx(\"section \", classes.intro)} id=\"courseList1\">\r\n          <div className=\"container\">\r\n            <Seo\r\n              link={\r\n                \"https://www.disdelkcp.com/subcategoria/\" +\r\n                subcategoriaLista[0] +\r\n                \"/\"\r\n              }\r\n              description={\r\n                \"Disdelsa Guatemala \" +\r\n                SeoSubcategoria[0]\r\n              }\r\n              keywords={\r\n                \"Disdelsa \" + SeoSubcategoria[0]\r\n              }\r\n              title={\r\n                SeoSubcategoria[0] + \" | Disdelsa \"\r\n              }\r\n              image={\r\n                \"https://disdelsa.com/imagenes/productos/\" +\r\n                SeoImagen[0]\r\n              }\r\n            />\r\n            <div className=\"mb-4 text-center mx-auto\">\r\n              <Breadcrums title=\"Inicio\" seccion={Segmento[0]} SeccionCategoriaLink={Categoria[0]} SeccionSubCategoria={subcategoriaLista[0]} />\r\n            </div>\r\n            <div className=\"mb-8 text-center mx-auto\">\r\n              <Buscador handleProducto={handleProducto} products={productSubCategory} />\r\n              <div className=\"mb-16\">\r\n                <Grid container spacing={1}>\r\n                  <Grid container md={3} sm={4} xs={12}>\r\n                    {isMobile ? null : <MostrarSubcategorias RecorrerSegmentos={RecorrerSegmentos} />}\r\n                  </Grid>\r\n                  <Grid container md={9} sm={8} xs={12} spacing={1}>\r\n                    {productFiltrado.length > 0 ?\r\n                      productFiltrado.map((item, ind) => (\r\n                        <Grid key={ind} item md={3} sm={6} xs={6}>\r\n                          <Card className={`relative h-full card ${classes.card}`}>\r\n                            <Link\r\n                              to={`/producto/${item.ItemCodeAux}/`}\r\n                              style={{\r\n                                cursor: \"hand\",\r\n                                background: \"white\",\r\n                                textDecoration: \"none\",\r\n                              }}\r\n                            >\r\n                              <ExampleImage\r\n                                image={item.Imagen}\r\n                                width={200}\r\n                                height={250}\r\n                              />\r\n                              <div className=\"text-left p-4\">\r\n                                <p className=\"mt-0 mb-0 text-12 font-semibold text-gray\">\r\n                                  {item.IdProducto} <br />\r\n                                  {item.Descripcion}\r\n                                </p>\r\n                              </div>\r\n                            </Link>\r\n                            <Grid\r\n                              container\r\n                              direction=\"row\"\r\n                              justify=\"center\"\r\n                              alignItems=\"center\"\r\n                            >\r\n                              <ButtonsCarr ProductData={item}  title=\"Cotizar\"  />\r\n                            </Grid>\r\n                          </Card>\r\n                        </Grid>\r\n                      )) : productSubCategory.map((item, ind) => (\r\n                        <Grid key={ind} item md={3} sm={6} xs={6}>\r\n                          <Card className={`relative h-full card ${classes.card}`}>\r\n                            <Link\r\n                              to={`/producto/${item.ItemCodeAux}/`}\r\n                              style={{\r\n                                cursor: \"hand\",\r\n                                background: \"white\",\r\n                                textDecoration: \"none\",\r\n                              }}\r\n                            >\r\n                              <ExampleImage\r\n                                image={item.Imagen}\r\n                                width={200}\r\n                                height={250}\r\n                              />\r\n                              <div className=\"text-left p-4\">\r\n                                <p className=\"mt-0 mb-0 text-12 font-semibold text-gray\">\r\n                                  {item.IdProducto} <br />\r\n                                  {item.Descripcion}\r\n                                </p>\r\n                              </div>\r\n                            </Link>\r\n                            <Grid\r\n                              container\r\n                              direction=\"row\"\r\n                              justify=\"center\"\r\n                              alignItems=\"center\"\r\n                            >\r\n                              <ButtonsCarr ProductData={item}  title=\"Añadir al Carrito\" />\r\n                            </Grid>\r\n                          </Card>\r\n                        </Grid>\r\n                      ))}\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubCategoria\r\n\r\nexport const pageQuery = graphql`\r\n  query($subcategoria: String!) {\r\n    allAllproductosJson(filter: { SubCategoriaAux: { eq: $subcategoria } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          IdRelacion\r\n          BaseFardo\r\n          BaseUnidad\r\n          BaseDefault\r\n          ItemCodeAux\r\n          IdProducto\r\n          Descripcion\r\n          Categoria\r\n          Imagen\r\n          Marca\r\n          Empaque\r\n          Unidad\r\n          Fardo\r\n          Precio\r\n          MultiploFardo\r\n          MultiploUnidad\r\n          PrecioIVA\r\n        }\r\n      }\r\n      subcategoriaLista: distinct(field: SubCategoriaAux)\r\n      Segmento:distinct(field: SegmentoAux)\r\n      Categoria:distinct(field: CategoriaAux)\r\n      SeoSubcategoria:distinct(field: SubCategoria)\r\n      SeoImagen:distinct(field: Imagen)\r\n    }\r\n    segmentosFilter: allMenuJsonJson {\r\n      edges {\r\n        node {\r\n          SegmentoAux\r\n          Categorias {\r\n            SubCategorias {\r\n              NombreSubCategoria\r\n              NombreSubCategoriaAux\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }    \r\n  }\r\n`\r\n"],"sourceRoot":""}